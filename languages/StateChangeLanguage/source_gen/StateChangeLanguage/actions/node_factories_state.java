package StateChangeLanguage.actions;

/*Generated by MPS */

import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class node_factories_state {
  public static class NodeFactory_7479276855445144330 implements NodeFactory {
    public void setup(SNode newNode, SNode sampleNode, SNode enclosingNode, int index, SModel model) {
      SNode nodeDiagram = (SNode) enclosingNode;

      SPropertyOperations.assign(newNode, PROPS.name$MnvL, "State " + ListSequence.fromList(SLinkOperations.getChildren(nodeDiagram, LINKS.states$1etX)).count());
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink states$1etX = MetaAdapterFactory.getContainmentLink(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b503eL, 0x67cbbaac519b5042L, "states");
  }
}
