package StateChangeLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptCondition = createDescriptorForCondition();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptStateDiagram = createDescriptorForStateDiagram();
  /*package*/ final ConceptDescriptor myConceptStateNode = createDescriptorForStateNode();
  /*package*/ final ConceptDescriptor myConceptTransition = createDescriptorForTransition();
  /*package*/ final ConceptDescriptor myConceptTransitionNode = createDescriptorForTransitionNode();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAction, myConceptCondition, myConceptState, myConceptStateDiagram, myConceptStateNode, myConceptTransition, myConceptTransitionNode);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.Condition:
        return myConceptCondition;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.StateDiagram:
        return myConceptStateDiagram;
      case LanguageConceptSwitch.StateNode:
        return myConceptStateNode;
      case LanguageConceptSwitch.Transition:
        return myConceptTransition;
      case LanguageConceptSwitch.TransitionNode:
        return myConceptTransitionNode;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateChangeLanguage", "Action", 0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b504bL);
    b.class_(false, false, false);
    b.origin("r:a0d0698c-b5a1-4dbd-9033-41e6b5366d4b(StateChangeLanguage.structure)/7479276855445114955");
    b.version(3);
    b.property("actionName", 0x67cbbaac519b505dL).type(PrimitiveTypeId.STRING).origin("7479276855445114973").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateChangeLanguage", "Condition", 0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b5058L);
    b.class_(false, false, false);
    b.origin("r:a0d0698c-b5a1-4dbd-9033-41e6b5366d4b(StateChangeLanguage.structure)/7479276855445114968");
    b.version(3);
    b.property("name", 0x67cbbaac519b5059L).type(PrimitiveTypeId.STRING).origin("7479276855445114969").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateChangeLanguage", "State", 0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b5044L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:a0d0698c-b5a1-4dbd-9033-41e6b5366d4b(StateChangeLanguage.structure)/7479276855445114948");
    b.version(3);
    b.aggregate("entryAction", 0x67cbbaac519b504dL).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b504bL).optional(true).ordered(true).multiple(false).origin("7479276855445114957").done();
    b.aggregate("doActivity", 0x67cbbaac519b504fL).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b504bL).optional(true).ordered(true).multiple(false).origin("7479276855445114959").done();
    b.aggregate("exitAction", 0x67cbbaac519b5050L).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b504bL).optional(true).ordered(true).multiple(false).origin("7479276855445114960").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStateDiagram() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateChangeLanguage", "StateDiagram", 0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b503eL);
    b.class_(false, false, true);
    b.origin("r:a0d0698c-b5a1-4dbd-9033-41e6b5366d4b(StateChangeLanguage.structure)/7479276855445114942");
    b.version(3);
    b.aggregate("nodes", 0x1e98fee87f52fc52L).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x1e98fee87f52fc4bL).optional(true).ordered(true).multiple(true).origin("2204792292119870546").done();
    b.aggregate("states", 0x1e98fee87f54f7eeL).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b5044L).optional(true).ordered(true).multiple(true).origin("2204792292120000494").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStateNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateChangeLanguage", "StateNode", 0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x1e98fee87f52fc4bL);
    b.class_(false, false, false);
    b.origin("r:a0d0698c-b5a1-4dbd-9033-41e6b5366d4b(StateChangeLanguage.structure)/2204792292119870539");
    b.version(3);
    b.associate("state", 0x1e98fee87f52fc4dL).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b5044L).optional(false).origin("2204792292119870541").done();
    b.aggregate("transitionsForState", 0x1e98fee87f52fc4fL).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x1e98fee87f5b9783L).optional(true).ordered(true).multiple(true).origin("2204792292119870543").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateChangeLanguage", "Transition", 0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b5052L);
    b.class_(false, false, false);
    b.origin("r:a0d0698c-b5a1-4dbd-9033-41e6b5366d4b(StateChangeLanguage.structure)/7479276855445114962");
    b.version(3);
    b.property("event", 0x67cbbaac519b5053L).type(PrimitiveTypeId.STRING).origin("7479276855445114963").done();
    b.associate("to", 0x67cbbaac519b5055L).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b5044L).optional(false).origin("7479276855445114965").done();
    b.aggregate("condition", 0x67cbbaac519b5056L).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b5058L).optional(true).ordered(true).multiple(false).origin("7479276855445114966").done();
    b.aggregate("effect", 0x67cbbaac519b505bL).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b504bL).optional(true).ordered(true).multiple(false).origin("7479276855445114971").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransitionNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateChangeLanguage", "TransitionNode", 0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x1e98fee87f5b9783L);
    b.class_(false, false, false);
    b.origin("r:a0d0698c-b5a1-4dbd-9033-41e6b5366d4b(StateChangeLanguage.structure)/2204792292120434563");
    b.version(3);
    b.aggregate("transitionsForState", 0x1e98fee87f5b9784L).target(0xf269776b13f84556L, 0xb9ea9dcaab37b019L, 0x67cbbaac519b5052L).optional(true).ordered(true).multiple(true).origin("2204792292120434564").done();
    return b.create();
  }
}
